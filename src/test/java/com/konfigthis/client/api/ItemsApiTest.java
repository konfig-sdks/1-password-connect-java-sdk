/*
 * 1Password Connect
 * REST API interface for 1Password Connect.
 *
 * The version of the OpenAPI document: 1.5.7
 * Contact: support@1password.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.Field;
import com.konfigthis.client.model.FullItem;
import com.konfigthis.client.model.FullItemAllOfSections;
import com.konfigthis.client.model.Item;
import com.konfigthis.client.model.ItemUrlsInner;
import com.konfigthis.client.model.ItemVault;
import com.konfigthis.client.model.ModelFile;
import java.time.OffsetDateTime;
import com.konfigthis.client.model.PatchInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ItemsApi
 */
@Disabled
public class ItemsApiTest {

    private static ItemsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ItemsApi(apiClient);
    }

    /**
     * Create a new Item
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewItemTest() throws ApiException {
        String vaultUuid = null;
        List<String> tags = null;
        String title = null;
        Integer version = null;
        String id = null;
        ItemVault vault = null;
        String category = null;
        List<ItemUrlsInner> urls = null;
        Boolean favorite = null;
        String state = null;
        OffsetDateTime createdAt = null;
        OffsetDateTime updatedAt = null;
        String lastEditedBy = null;
        List<FullItemAllOfSections> sections = null;
        List<Field> fields = null;
        List<ModelFile> files = null;
        FullItem response = api.createNewItem(vaultUuid)
                .tags(tags)
                .title(title)
                .version(version)
                .id(id)
                .vault(vault)
                .category(category)
                .urls(urls)
                .favorite(favorite)
                .state(state)
                .createdAt(createdAt)
                .updatedAt(updatedAt)
                .lastEditedBy(lastEditedBy)
                .sections(sections)
                .fields(fields)
                .files(files)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete an Item
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteItemByIdTest() throws ApiException {
        String vaultUuid = null;
        String itemUuid = null;
        api.deleteItemById(vaultUuid, itemUuid)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all items for inside a Vault
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllTest() throws ApiException {
        String vaultUuid = null;
        String filter = null;
        List<Item> response = api.getAll(vaultUuid)
                .filter(filter)
                .execute();
        // TODO: test validations
    }

    /**
     * Get the details of an Item
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDetailsByIdTest() throws ApiException {
        String vaultUuid = null;
        String itemUuid = null;
        FullItem response = api.getDetailsById(vaultUuid, itemUuid)
                .execute();
        // TODO: test validations
    }

    /**
     * Update an Item
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateItemDetailsTest() throws ApiException {
        String vaultUuid = null;
        String itemUuid = null;
        List<String> tags = null;
        String title = null;
        Integer version = null;
        String id = null;
        ItemVault vault = null;
        String category = null;
        List<ItemUrlsInner> urls = null;
        Boolean favorite = null;
        String state = null;
        OffsetDateTime createdAt = null;
        OffsetDateTime updatedAt = null;
        String lastEditedBy = null;
        List<FullItemAllOfSections> sections = null;
        List<Field> fields = null;
        List<ModelFile> files = null;
        FullItem response = api.updateItemDetails(vaultUuid, itemUuid)
                .tags(tags)
                .title(title)
                .version(version)
                .id(id)
                .vault(vault)
                .category(category)
                .urls(urls)
                .favorite(favorite)
                .state(state)
                .createdAt(createdAt)
                .updatedAt(updatedAt)
                .lastEditedBy(lastEditedBy)
                .sections(sections)
                .fields(fields)
                .files(files)
                .execute();
        // TODO: test validations
    }

    /**
     * Update a subset of Item attributes
     *
     * Applies a modified [RFC6902 JSON Patch](https://tools.ietf.org/html/rfc6902) document to an Item or ItemField. This endpoint only supports &#x60;add&#x60;, &#x60;remove&#x60; and &#x60;replace&#x60; operations.  When modifying a specific ItemField, the ItemField&#39;s ID in the &#x60;path&#x60; attribute of the operation object: &#x60;/fields/{fieldId}&#x60; 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSubsetAttributesTest() throws ApiException {
        String vaultUuid = null;
        String itemUuid = null;
        FullItem response = api.updateSubsetAttributes(vaultUuid, itemUuid)
                .execute();
        // TODO: test validations
    }

}
